// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String
  role         UserRole
  displayName  String
  mfaEnabled   Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  children     Child[]
  policies     Policy[]
  consents     Consent[]
  auditLogs    AuditLog[]
  events       Event[]

  @@map("users")
}

model Child {
  id         String   @id @default(cuid())
  userId     String
  displayName String
  ageBand    AgeBand
  values     Json     // Values profile as JSON
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  events     Event[]
  analyses   Analysis[]
  summaries  Summary[]
  
  // NEW: Enhanced Feature Relations (Additive)
  riskAssessments    RiskAssessment[]
  emotionalStates    EmotionalState[]
  behavioralPatterns BehavioralPattern[]
  interventionLogs   InterventionLog[]

  @@map("children")
}

model Event {
  id        String   @id @default(cuid())
  childId   String
  userId    String
  type      EventType
  source    String
  uri       String?
  startedAt DateTime
  endedAt   DateTime?
  meta      Json?    // Additional metadata
  createdAt DateTime @default(now())

  // Relations
  child     Child     @relation(fields: [childId], references: [id], onDelete: Cascade)
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  analyses  Analysis[]
  
  // NEW: Enhanced Feature Relations (Additive)
  riskAssessments RiskAssessment[]

  @@map("events")
}

model Analysis {
  id           String   @id @default(cuid())
  eventId      String
  safetyScore  Int      // 0-100
  qualityScore Int      // 0-100
  biasScore    Int      // 0-100
  bias         Json?    // Detailed bias analysis
  evidence     Json?    // Evidence snippets
  confidence   Float    // 0.0-1.0
  createdAt    DateTime @default(now())

  // Relations
  event       Event     @relation(fields: [eventId], references: [id], onDelete: Cascade)
  
  // NEW: Enhanced Feature Relations (Additive)
  culturalBiasAnalysis CulturalBiasAnalysis?
  enhancedAnalysis     EnhancedAnalysis?

  @@map("analyses")
}

model Summary {
  id          String   @id @default(cuid())
  childId     String
  periodStart DateTime
  periodEnd   DateTime
  digest      Json     // Summary data
  pdfPath     String?
  createdAt   DateTime @default(now())

  // Relations
  child       Child     @relation(fields: [childId], references: [id], onDelete: Cascade)

  @@map("summaries")
}

model Policy {
  id            String   @id @default(cuid())
  userId        String
  profile       Json     // Policy configuration
  retentionDays Int      @default(30)
  whitelist     String[] @default([])
  graylist      String[] @default([])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("policies")
}

model Consent {
  id        String   @id @default(cuid())
  userId    String
  childId   String?
  scope     String
  grantedAt DateTime @default(now())
  revokedAt DateTime?

  // Relations
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("consents")
}

model AuditLog {
  id       String   @id @default(cuid())
  actorId  String
  action   String
  target   String
  meta     Json?
  createdAt DateTime @default(now())

  // Relations
  actor    User     @relation(fields: [actorId], references: [id], onDelete: Cascade)

  @@map("audit_logs")
}

enum UserRole {
  PARENT
  EDUCATOR
  TEEN
  ADMIN
}

enum AgeBand {
  AGE_8_10
  AGE_11_13
  AGE_14_16
  AGE_17_PLUS
}

enum EventType {
  VIDEO
  TEXT
  CHAT
  APP
  WEBSITE
}

// NEW: Enhanced Risk Assessment Tables (Additive - Backward Compatible)
model RiskAssessment {
  id                   String   @id @default(cuid())
  childId              String
  eventId              String?
  compositeRiskScore   Float    // 0.0-1.0
  riskLevel            RiskLevel
  contentSafetyRisk    Float    // 0.0-1.0
  behavioralRisk       Float    // 0.0-1.0
  temporalRisk         Float    // 0.0-1.0
  emotionalRisk        Float    // 0.0-1.0
  cumulativeRisk       Float    // 0.0-1.0
  riskFactors          Json     // Detailed risk factor analysis
  interventionTriggers Json     // Intervention recommendations
  riskTrend            String   // "increasing", "stable", "decreasing"
  predictionConfidence Float    // 0.0-1.0
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  // Relations
  child                Child    @relation(fields: [childId], references: [id], onDelete: Cascade)
  event                Event?   @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@map("risk_assessments")
}

model EmotionalState {
  id                   String   @id @default(cuid())
  childId              String
  sessionId            String?
  primaryEmotion       EmotionType
  confidence           Float    // 0.0-1.0
  emotionalIndicators  Json     // List of detected emotional indicators
  crisisLevel          CrisisLevel
  supportNeeded        Boolean  @default(false)
  interventionRequired Boolean  @default(false)
  parentNotified       Boolean  @default(false)
  notificationUrgency  String?  // "immediate", "within_24_hours", "within_week"
  moodContext          Json?    // Additional mood context data
  createdAt            DateTime @default(now())

  // Relations
  child                Child    @relation(fields: [childId], references: [id], onDelete: Cascade)

  @@map("emotional_states")
}

model BehavioralPattern {
  id                   String   @id @default(cuid())
  childId              String
  patternType          String   // "session_duration", "daily_frequency", "content_diversity"
  value                Float    // Pattern value
  trend                String   // "increasing", "stable", "decreasing"
  riskScore            Float    // 0.0-1.0
  confidence           Float    // 0.0-1.0
  weekStart            DateTime // Week this pattern data represents
  weekEnd              DateTime
  metadata             Json?    // Additional pattern metadata
  createdAt            DateTime @default(now())

  // Relations
  child                Child    @relation(fields: [childId], references: [id], onDelete: Cascade)

  @@map("behavioral_patterns")
}

model CulturalBiasAnalysis {
  id                   String   @id @default(cuid())
  analysisId           String   @unique
  culturalContext      String   // "western", "eastern", "indigenous", "global_south"
  representationScore  Float    // 0.0-1.0
  culturalMarkers      Json     // Detected cultural markers
  missingPerspectives  Json     // Array of missing cultural perspectives
  biasIndicators       Json     // Array of cultural bias indicators
  sensitivityScore     Float    // 0.0-1.0
  underrepresentedGroups Json   // Array of underrepresented groups
  balancedPerspectives Json     // Generated balanced perspectives
  perspectiveSynthesis Json     // Synthesized missing perspectives
  createdAt            DateTime @default(now())

  // Relations
  analysis             Analysis @relation(fields: [analysisId], references: [id], onDelete: Cascade)

  @@map("cultural_bias_analyses")
}

model InterventionLog {
  id                   String   @id @default(cuid())
  childId              String
  interventionType     String   // "content_break", "parent_notification", "crisis_intervention"
  triggerReason        String
  riskLevel            RiskLevel
  urgency              Int      // 1-10 scale
  status               InterventionStatus
  recommendedActions   Json     // Array of recommended actions
  actualActions        Json?    // Array of actions taken
  effectiveness        Float?   // 0.0-1.0 (measured after intervention)
  parentNotified       Boolean  @default(false)
  professionalReferral Boolean  @default(false)
  createdAt            DateTime @default(now())
  resolvedAt           DateTime?

  // Relations
  child                Child    @relation(fields: [childId], references: [id], onDelete: Cascade)

  @@map("intervention_logs")
}

model FeatureFlags {
  id                   String   @id @default(cuid())
  flagName             String   @unique
  enabled              Boolean  @default(false)
  rolloutPercentage    Int      @default(0) // 0-100
  targetAgeGroups      String[] @default([]) // Age groups to enable for
  description          String?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@map("feature_flags")
}

// NEW: Enhanced Analysis Extensions (Additive)
model EnhancedAnalysis {
  id                   String   @id @default(cuid())
  analysisId           String   @unique
  enhancedBiasScore    Float?   // Enhanced bias detection score
  intersectionalFactors Json?   // Intersectional bias analysis
  predictiveRiskScore  Float?   // Predictive risk assessment
  emotionalContext     Json?    // Emotional context analysis
  algorithmVersion     String   @default("1.0.0")
  confidence           Float    @default(0.85)
  processingTime       Int?     // Processing time in milliseconds
  featureFlags         Json?    // Feature flags used during analysis
  createdAt            DateTime @default(now())

  // Relations
  analysis             Analysis @relation(fields: [analysisId], references: [id], onDelete: Cascade)

  @@map("enhanced_analyses")
}

// NEW: Enums for Enhanced Features
enum RiskLevel {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum EmotionType {
  HAPPY
  SAD
  FRUSTRATED
  ANXIOUS
  EXCITED
  ANGRY
  CONFUSED
  NEUTRAL
}

enum CrisisLevel {
  NONE
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum InterventionStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
  ESCALATED
} 